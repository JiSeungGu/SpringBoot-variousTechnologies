plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
}

group = 'net.sejongtelecom'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// 2021 03 19 한현수 추가 batch query 를 위해
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'

	compile group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '2.3.8.RELEASE'

	implementation "org.mapstruct:mapstruct:1.4.1.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.4.1.Final"

	implementation 'net.rakugakibox.util:yaml-resource-bundle:1.1'

	//Fabric SDK
	compile group: 'org.hyperledger.fabric-sdk-java', name: 'fabric-sdk-java', version: '1.4.3'

	//Object Pool
	compile group: 'org.apache.commons', name: 'commons-pool2', version: '2.0'

	// Simple Json
	compile group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1'

	compile group: 'commons-io', name: 'commons-io', version: '2.6'

	// 2021 03 19 한현수 추가 validation check
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// https://mvnrepository.com/artifact/org.mockito/mockito-all
	testImplementation group: 'org.mockito', name: 'mockito-all', version: '1.10.19'
}

test {
	useJUnitPlatform()
}

///////////////////////////////////////////////////
// querydsl 추가 코드 (6점대 gradle 최적화)
// Annotation processor 이용 성능향상 꽤함
// 생성물(QClass)의 위치는 기본적으로 아래와 같음(변경을 위해서는 intellij에서의 설정이 필요)
// build/generated/sources/annotationProcessor/java/main
// Intellij IDEA - Build, Execution, Deployment - Build tools → Gradle 에서 ‘Build and run’ 설정을 통해 위치 설정 가능
apply plugin: "io.spring.dependency-management"

dependencies {
	compile("com.querydsl:querydsl-core")
	compile("com.querydsl:querydsl-jpa")

	annotationProcessor("com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa") // querydsl JPAAnnotationProcessor 사용 지정
	annotationProcessor("jakarta.persistence:jakarta.persistence-api") // java.lang.NoClassDefFoundError(javax.annotation.Entity) 발생 대응
	annotationProcessor("jakarta.annotation:jakarta.annotation-api") // java.lang.NoClassDefFoundError (javax.annotation.Generated) 발생 대응
}

// clean 태스크 실행 시 QClass 삭제
clean {
	delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성위치
}
///////////////////////////////////////////////////